#!/usr/bin/env bash

set -euC -o pipefail

# Source common utilities
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${SCRIPT_DIR}/lib/common.sh"

uv_update_tools() {
    local success=true
    local output
    local reinstall_needed=()

    if UV_TOOLS=$(uv tool list 2>/dev/null | grep -v '^-' | awk '{ print $1}'); then
	for tool in $UV_TOOLS; do
	    echo "  - Updating $tool"
	    # Capture both stdout and stderr
	    output=$(uv tool upgrade "$tool" 2>&1)
	    local exit_code=$?

	    # Display the output
	    echo "$output"

	    # Check for reinstall warning
	    if echo "$output" | grep -q "run \`uv tool install .* --reinstall\` to reinstall"; then
		reinstall_needed+=("$tool")
	    elif [ $exit_code -ne 0 ]; then
		echo "    WARNING: Failed to update $tool"
		success=false
	    fi
	done

	# Handle tools that need reinstalling
	if [ ${#reinstall_needed[@]} -gt 0 ]; then
	    echo ""
	    echo "  Reinstalling tools with interpreter issues..."
	    for tool in "${reinstall_needed[@]}"; do
		echo "  - Reinstalling $tool"
		if ! uv tool install "$tool" --reinstall; then
		    echo "    WARNING: Failed to reinstall $tool"
		    success=false
		fi
	    done
	fi
    else
	echo "  No UV tools found or error listing tools"
	return 1
    fi
    $success
}

if has_command brew; then
    # Run Homebrew commands separately to avoid command parsing issues
    print_section "Updating Homebrew and all installed packages"
    
    # Run each step separately for better error handling
    if ! brew update; then
	echo "WARNING: Failed to update Homebrew"
    elif ! brew upgrade; then
	echo "WARNING: Failed to upgrade Homebrew packages"
    elif ! brew cleanup; then
	echo "WARNING: Failed to clean up Homebrew"
    fi
fi

# check for apt-get instead of apt, since MacOS has a binary called apt
if has_command apt-get; then
    print_section "Updating apt packages"
    run_step "sudo bash -c 'apt update && apt -y dist-upgrade'" "Updating system packages"
fi

if has_command mise; then
    # Run mise commands separately to avoid command parsing issues
    print_section "Updating mise and installed tools"
    
    # Run each step separately for better error handling
    if ! mise self-update -y; then
	echo "WARNING: Failed to update mise"
    elif ! mise upgrade -y; then
	echo "WARNING: Failed to upgrade mise tools"
    fi
fi

if has_command rustup; then
    print_section "Updating rust toolchain"
    run_step "rustup update" "Updating Rust"
fi

if has_command cargo-install-update; then
    print_section "Updating cargo tools"
    run_step "cargo install-update -a" "Updating installed Cargo packages"
fi

# Update UV tools if any are installed
if has_command uv; then
    print_section "Updating UV tools"
    run_step "uv_update_tools" "Updating UV-installed tools"
fi
